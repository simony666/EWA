@{
    ViewBag.Title = "Chart 5";
    DateTime today = DateTime.Today;
    string max = today.ToString("yyyy-MM-dd");
    string default_date = ViewBag.Date ?? max;
}
@Html.TextBox("date", default_date, new { type = "date", max = max })
<br/>
<div id="chart" style="width: 600px; height: 400px"></div>

<p>
    <a href="#" id="reload">Reload</a>
    <label><input type="checkbox" id="stacked">Stacked</label>
</p>

<p>
    [ <a href="Data5" target="data">Data</a> ]
</p>

@section foot {
    <script src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { packages: ['corechart'] });
        google.charts.setOnLoadCallback(init);

        let dt, opt, cht;

        const url = 'Data5';

        function init() {
            dt = new google.visualization.DataTable();
            // Data table columns: Program, Female and Male
            dt.addColumn('string', 'ClassName');
            dt.addColumn('number', 'Attend');
            dt.addColumn('number', 'Absent');

            const style = { bold: true, italic: false, fontSize: 20, color: 'purple' };

            opt = {
                title: 'Attendance Status of Each Class',
                fontName: 'Roboto',
                fontSize: 16,
                titleTextStyle: { fontSize: 20 },
                chartArea: { width: '65%', height: '70%', top: 60, left: 80 },
                vAxis: { title: 'Student Count', titleTextStyle: style, ticks: [1, 2, 3]  },
                hAxis: { title: 'Class Name', titleTextStyle: style },
                animation: { duration: 500, startup: true },
                // TODO: colors ['#dc3912', '#3366cc'], isStacked, focusTarget
                colors: ['#00ff00', '#dc3912'],
                isStacked: false, // true
                focusTarget: 'datum', // category
            };

            cht = new google.visualization.ColumnChart($('#chart')[0]);

            $('#reload').click();
        }

        $('#reload').click(e => {
            e.preventDefault();

            const date = $('#date').val();
            const param = { id: date };

            opt.title = `Attendance Status of Each Class On ${date}`;

            $.getJSON(url, param, data => {
                dt.removeRows(0, dt.getNumberOfRows());
                dt.addRows(data);
                cht.draw(dt, opt);
            });
        });

        $('#stacked').change(e => {
            e.preventDefault();

            opt.isStacked = e.target.checked;

            opt.focusTarget = e.target.checked ? 'category' : 'datum';

            cht.draw(dt, opt);
        });

        $('#date').change(e => {
            e.preventDefault();

            const el = e.target;
            if (el.value > el.max) {
                el.value = el.max;
            }

            const date = $('#date').val();
            const param = {id: date};
            opt.title = `Attendance Status of Each Class On ${date}`;

            $.getJSON(url, param, data => {
                dt.removeRows(0, dt.getNumberOfRows());
                dt.addRows(data);
                cht.draw(dt, opt);
            });



        })
    </script>
}
